{"version":3,"sources":["User.js","AddFacts.js","EditDinosaur.js","EditFacts.js","DisplayFact.js","DisplayDinosaur.js","FilterByName.js","FilteredByFirstLetter.js","FilterByAttribute.js","DinosaurList.js","LoginForm.js","SignUpForm.js","Login.js","Home.js","NavBar.js","Information.js","SignOut.js","DinosaurProject.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","dinosaurs","setDinosaurs","useEffect","fetch","then","res","ok","json","_useState5","_useState6","regions","setRegions","_useState7","_useState8","periods","setPeriods","_useState9","_useState10","stats","setStats","createElement","Provider","value","AddFacts","dinosaur","onUpdate","fact","setFact","factArray","_toConsumableArray","facts","errors","setErrors","map","err","className","key","onSubmit","e","preventDefault","method","headers","Content-Type","body","JSON","stringify","interesting_fact","dinosaur_id","id","r","_objectSpread","concat","console","log","type","onChange","target","EditDinosaur","dino","setDisplayEdit","_useContext","useContext","regionsOptions","region","name","periodsOptions","period","dietaryOptions","diet","image_url","setDinosaur","handleChange","event","_defineProperty","updatedList","error","htmlFor","image","EditFacts","thisFact","updatedArray","aFact","DisplayFact","displayEdit","displayButtons","setDisplayButtons","onClick","updatedFacts","filter","f","deleteFact","DisplayDinosaur","description","factsList","expand","setExpand","toUpperCase","src","alt","FilterByName","setName","placeholder","FilteredByFirstLetter","letter","setLetter","letterOptions","FilterByAttribute","attribute","setAttribute","attributeOptions","attr","DinosaurList","dinoList","toLowerCase","includes","length","LoginForm","onLogin","username","setUsername","password","setPassword","isLoading","setIsLoading","navigate","useNavigate","autoComplete","SignUpForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","data","Login","showLogin","setShowLogin","Home","NavBar","NavLink","to","style","background","isActive","_ref2","_ref3","_ref4","Information","total_dinosaurs","by_region","by_period","by_diet","regionsList","periodsList","listOf","list","el","numbers","percentage","needs_updating","updated","percentage_updated","number_to_update","percentage_to_update","SignOut","wantToLogOut","setWantToLogOut","DinosaurProject","Routes","Route","path","element","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.23fd8b31.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst UserContext = React.createContext()\n\nfunction UserProvider({children}) {\n    const [user, setUser] = useState(null)\n    const [dinosaurs, setDinosaurs] = useState([])\n\n    useEffect(()=>{\n        fetch('/me')\n        .then(res=>{\n            if (res.ok){\n                res.json().then(user=>setUser(user))\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n      fetch('/dinosaurs')\n      .then(res=>res.json())\n      .then(setDinosaurs)\n    }, [])\n\n    const [regions, setRegions] = useState([])\n    const [periods, setPeriods] = useState([])\n\n    useEffect(() => {\n        fetch('/regions')\n        .then(res=>res.json())\n        .then(setRegions)\n    },[])\n\n    useEffect(() => {\n        fetch('/periods')\n        .then(res=>res.json())\n        .then(setPeriods)\n    },[])\n\n    const [stats, setStats] = useState([])\n\n    useEffect(() => {\n        fetch('/collections')\n        .then(res=>res.json())\n        .then(setStats)\n    },[])\n\n    return (\n        <UserContext.Provider value={{\n            user, setUser, \n            dinosaurs, setDinosaurs, \n            regions, setRegions, \n            periods, setPeriods,\n            stats, setStats}}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport {UserContext, UserProvider}","import React, {useState} from 'react'\n\nfunction AddFacts({dinosaur, onUpdate}) {\n    const [fact, setFact] = useState(\"\")\n    const factArray = [...dinosaur.facts]\n    const [errors, setErrors] = useState(null)\n    function addFact(e){\n        e.preventDefault()\n        fetch(`/facts`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({interesting_fact: fact, dinosaur_id: dinosaur.id})\n        })\n        .then(r=>{\n            if(r.ok){ \n                r.json().then(fact=>{\n                    onUpdate({...dinosaur, facts:[...factArray, fact]})\n                    console.log(factArray, [...factArray, fact])\n                })                                \n            }\n            else{r.json().then(errors=>setErrors(errors.errors))}\n        })\n    }\n    \n  return (\n    <div>\n        {errors ? errors.map(err=><p className=\"error\" key={err}>{err}</p>) : null}\n        <form onSubmit={addFact}>\n            <label>Enter a fact about this dinosaur</label>\n            <input type=\"text\" className='fact' value={fact} onChange={(e)=>setFact(e.target.value)}/>\n            <button type=\"submit\" >Submit Fact</button>\n        </form>\n    </div>\n  )\n}\n\nexport default AddFacts","import React, {useState, useContext} from 'react'\nimport { UserContext } from './User'\nimport AddFacts from './AddFacts'\n\nfunction EditDinosaur({dino, setDisplayEdit}) {\n    const {regions, periods, dinosaurs, setDinosaurs} = useContext(UserContext)\n    const [errors, setErrors] = useState(null)\n    const dietaryHabits = [\"Carnivore\", \"Herbivore\", \"Omnivore\"]\n    const regionsOptions = regions.map(region=><option key={region.id} className='region' value={region.name}>{region.name}</option>)\n    const periodsOptions = periods.map(period=><option key={period.id} name = \"period\"className='period' value={period.name}>{period.name}</option>)\n    const dietaryOptions = dietaryHabits.map(diet=><option key={diet} name = \"diet\" className='dietary-habits' value={diet}>{diet}</option>)\n\n    const {id, image_url, region, period, diet} = dino\n    let image\n    const [dinosaur, setDinosaur] = useState({\n        image_url,\n        region,\n        period,\n        diet\n    })\n\n    function handleChange(event) {\n        console.log(event.target.name, \": \", event.target.value)\n        setDinosaur({...dinosaur, [event.target.name]:event.target.value})\n    }\n\n    function onUpdate(dinosaur){\n        const updatedList = dinosaurs.map(dino=>dino.id===dinosaur.id ? dinosaur : dino)\n        setDinosaurs(updatedList)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        console.log(dinosaur)\n        fetch(`/dinosaurs/${id}`, {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(dinosaur)\n        })\n        .then(res=>{\n            if (res.ok) {\n                res.json().then(dinosaur=>{\n                    setDinosaur(dinosaur)\n                    onUpdate(dinosaur)\n                    setDisplayEdit(false)\n                })\n            } else {\n                    res.json().then(errors=>setErrors(errors.errors))\n                }\n        });\n\n    }\n\n  return (\n    <div >\n        <AddFacts dinosaur={dino} onUpdate={onUpdate} /><br/>\n        <form onSubmit={handleSubmit}>\n            {errors ? errors.map(error=><p className=\"error\" key={error}>{error}</p>) : null}\n            <label htmlFor='image' name=\"image_url\" className='region'>Enter an image URL</label >\n            <input className='image' type='text' name='image_url' value={image} onChange={handleChange}/>\n            <br/>\n            <label htmlFor='region' name=\"region\" className='region'>Choose a geographic region</label >\n            <select onChange={handleChange} name = \"region\">\n                <option className='region' value=\"\"></option>\n                {regionsOptions}\n            </select>\n            <br/>\n            <label htmlFor='period' name=\"period\" className='period'>Choose a time period</label>\n            <select name=\"period\" onChange={handleChange}>\n                <option className='period' value=\"\"></option>\n                {periodsOptions} \n            </select>\n            <br/>\n            <label htmlFor='diet' name=\"diet\" className='diet' >Choose a dietary habit</label>\n            <select name=\"diet\" onChange={handleChange}>\n                <option className='diet' value=\"\"></option>\n                {dietaryOptions}                \n            </select>\n            <br/>\n            <button type='submit'>Submit</button>\n            <br/><br/>\n        </form>\n    </div>\n  )\n}\n\nexport default EditDinosaur","import React, {useState} from 'react'\n\nfunction EditFacts({thisFact, dinosaur, onUpdate, setDisplayEdit}) {\n    const [fact, setFact] = useState(thisFact.interesting_fact)\n    const factArray = [...dinosaur.facts]\n    const [errors, setErrors] = useState(null)\n    function addFact(e){\n        e.preventDefault()\n        fetch(`/facts/${thisFact.id}`, {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({interesting_fact: fact, dinosaur_id: dinosaur.id})\n        })\n        .then(r=>{\n            if(r.ok){ \n                r.json().then(fact=>{\n                    const updatedArray = factArray.map(aFact => aFact.id===fact.id ? fact : aFact)\n                    onUpdate({...dinosaur, facts: [...updatedArray]})\n                    setDisplayEdit(false)\n                })               \n            }\n            else{r.json().then(errors=>setErrors(errors.errors))}\n        })\n    }\n    \n  return (\n    <div>\n        {errors ? errors.map(err=><p className=\"error\" key={err}>{err}</p>) : null}\n        <form onSubmit={addFact}>\n            <input type=\"text\" className='fact' value={fact} onChange={(e)=>setFact(e.target.value)}/>\n            <button type=\"submit\" >Submit</button>\n        </form>\n    </div>\n  )\n}\n\nexport default EditFacts","import React, {useState, useContext} from 'react'\nimport EditFacts from './EditFacts'\nimport { UserContext } from './User'\n\nfunction DisplayFact({fact, dino}) {\n  const [displayEdit, setDisplayEdit] = useState(false)\n  const [displayButtons, setDisplayButtons] = useState(false)\n  const {dinosaurs, setDinosaurs} = useContext(UserContext)\n\n  function onUpdate(dinosaur){\n    const updatedList = dinosaurs.map(dino=>dino.id===dinosaur.id ? dinosaur : dino)\n    setDinosaurs(updatedList)\n  }\n\n  function deleteFact(){\n    fetch(`/facts/${fact.id}`, {\n      method: 'DELETE'\n    })\n    const updatedFacts = dino.facts.filter(f => f.id!==fact.id);\n    const updatedDino = {...dino, facts: [...updatedFacts]}\n    onUpdate(updatedDino);\n  }\n  return (\n    <div>\n      <div className='fact-form'>\n        {displayEdit ? \n        <EditFacts thisFact={fact} dinosaur={dino} onUpdate={onUpdate} setDisplayEdit={setDisplayEdit} /> \n        : <p onClick={()=>setDisplayButtons(!displayButtons)}>{fact.interesting_fact}</p>}\n      </div>\n      {displayButtons ? \n      <span>\n        <button onClick={()=>setDisplayEdit(!displayEdit)}>\n          {displayEdit ? \" hide edit\" : \"edit\"}\n        </button>\n        <button onClick={()=>deleteFact()}>X</button>\n      </span> \n      : null}\n    </div>\n  )\n}\n\nexport default DisplayFact","import React, { useState } from 'react'\nimport EditDinosaur from './EditDinosaur'\nimport DisplayFact from './DisplayFact'\n\nfunction DisplayDinosaur({dino}) {\n    const {name, description, image_url, region, period, diet, facts} = dino\n    const defaultImg = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbOt6PL3YGoNIFjuPLbBS3FbBVUwjhUXbV2w&usqp=CAU\"\n    const factsList = facts.map(fact=><DisplayFact key={fact.id} fact={fact} dino={dino}/>)\n    const [expand, setExpand] = useState(false)\n    const [displayEdit, setDisplayEdit] = useState(false)\n  return (\n    <div className={expand ? \"profile-expanded\" : 'profile'}>  \n        <button onClick={()=>setExpand(!expand)}>{expand ? \"collapse\":\"expand\"}</button> \n        <br />\n        <h1 className='dinosaur-name' >{name.toUpperCase()}</h1>\n        <main>\n        <section className='container-dino-fact'>\n          <img className='image-thumbnail' src={image_url!==\"\" ? image_url : defaultImg} alt={name} />   \n        </section>\n        {expand ?\n        <div>\n          <section className='container-dino-fact'>\n            <p><strong>Description:</strong> {description}</p>\n            <p><strong>Region:</strong> {region}</p>\n            <p><strong>Period:</strong> {period}</p>\n            <p><strong>Diet:</strong> {diet}</p>\n          </section>\n        </div>\n        : null}\n        {expand ?\n        <div>\n          <section className='container-dino-fact'>\n            <h3>Facts:</h3>\n            <div>{factsList}</div>\n            <br/>\n            <div className={displayEdit ? 'update-form' : null}>\n              <button onClick={()=>setDisplayEdit(!displayEdit)}>{displayEdit? 'Hide Editing Form' : 'Display Editing Form'}</button>\n              {displayEdit ? <EditDinosaur dino={dino} setDisplayEdit={setDisplayEdit}/> : null}\n            </div>\n          </section>\n        </div>\n        : null}\n        </main>\n    </div>\n  )\n}\n\nexport default DisplayDinosaur","import React from 'react'\n\nfunction FilterByName({name, setName}) {\n  return (\n    <div className='filter'>\n        <label htmlFor=\"name\" className='name'>Filter By Name</label>\n        <input type=\"text\" className='name' value={name} placeholder='Enter name' onChange={(e)=>setName(e.target.value)} />\n    </div>\n  )\n}\n\nexport default FilterByName","import React from 'react'\n\nfunction FilteredByFirstLetter({letter, setLetter}) {\n    const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n    const letterOptions = alphabet.map(letter=><option key={letter} value={letter}>{letter}</option>)\n  return (\n    <div className='filter'>\n        <label htmlFor=\"letter\" className='letter'>Filter By First Letter</label>\n        <select className='letter'value={letter} onChange={(e)=>setLetter(e.target.value)}>\n            <option value=\"\" >All</option>\n            {letterOptions}\n        </select>\n    </div>\n  )\n}\n\nexport default FilteredByFirstLetter","import React, {useContext} from 'react'\nimport { UserContext } from './User'\n\nfunction FilterByAttribute({attribute, setAttribute, filter}) {\n    const {regions, periods} = useContext(UserContext)\n    const attrs = filter === \"Regions\" ? regions : periods\n    const attributeOptions = attrs.map(attr=><option key={attr.id} value={attr.name}>{attr.name}</option>)\n  return (\n    <div className='filter'>\n        <label htmlFor=\"attribute\" className='attribute'>Filter By {filter}</label>\n        <select className='attribute'value={attribute} onChange={(e)=>setAttribute(e.target.value)}>\n            <option value=\"\" >All</option>\n            {attributeOptions}\n        </select>\n    </div>\n  )\n}\n\nexport default FilterByAttribute","import React, {useState} from 'react'\nimport DisplayDinosaur from './DisplayDinosaur';\nimport FilterByName from './FilterByName';\nimport FilteredByFirstLetter from './FilteredByFirstLetter';\nimport FilterByAttribute from './FilterByAttribute';\n\nfunction DinosaurList({dinosaurs}) {\n  const [name, setName] = useState(\"\")\n  const [letter, setLetter] = useState(\"\")\n  const [regions, setRegions] = useState(\"\")\n  const [periods, setPeriods] = useState(\"\")\n\n  function filteredDinoList(){\n    const filteredByName = dinosaurs.filter(dino => dino.name.toLowerCase().includes(name.toLowerCase()));\n    const filteredByLetter = filteredByName.filter(dino => dino.name[0].toUpperCase().includes(letter))\n    const filteredByRegion = filteredByLetter.filter(dino => dino.region.includes(regions))\n    const filteredByPeriod = filteredByRegion.filter(dino => dino.period.includes(periods));\n\n    return filteredByPeriod\n  } \n\n  const dinoList = filteredDinoList().map(dino => <DisplayDinosaur key={dino.id} dino={dino} />);\n  return (\n    <div className='list'>\n        <h1>Dinosaur Project</h1>\n        <h3>Number of dinosaurs: {dinosaurs.length} || Displayed dinosaurs: {dinoList.length}</h3>\n        <FilterByName name={name} setName={setName} />\n        <FilteredByFirstLetter letter={letter} setLetter={setLetter} />\n        <FilterByAttribute name={regions} setAttribute={setRegions} filter={\"Regions\"}/>\n        <FilterByAttribute name={periods} setAttribute={setPeriods} filter={\"Periods\"}/>\n        <div>\n          {dinoList}\n        </div>\n    </div>\n  )\n}\n\nexport default DinosaurList","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LoginForm({onLogin}) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate()\n    \n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user)\n          navigate('/')\n        })\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n    }\n        \n  return (\n    <div className=\"form\">\n        <form onSubmit={handleSubmit}>\n          <label>username</label>\n          <input \n            type=\"text\" \n            placeholder=\"enter username\" \n            autoComplete=\"off\"\n            value={username}\n            onChange={(e)=>setUsername(e.target.value)} \n          />\n          <br/>\n          <label>password</label>\n            <input \n            type=\"password\" \n            placeholder=\"enter password\" \n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e)=>setPassword(e.target.value)} \n            />\n          <br/>\n          <button type=\"submit\">\n            {isLoading ? \"Loading...\" : \"Login\"}\n          </button>\n        </form>\n        <p className=\"error\">{errors}</p>\n      </div>\n  )\n}\n\nexport default LoginForm","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate()\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user)\n          navigate('/')\n        });\n      } else {\n        r.json().then((data) => setErrors(data.error));\n      }\n    });\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n        <br />\n        <label htmlFor=\"password\">Password Confirmation</label>\n        <input\n          type=\"password\"\n          placeholder=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n        <br />\n        <button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</button>\n        {<p className=\"error\">{errors}</p>}\n    </form>\n  );\n}\n\nexport default SignUpForm;","import React, { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <div>\n      <h1>Dinosaur Project</h1>\n      <h3>Please Log In</h3>\n      {showLogin ? (\n        <div>\n          <LoginForm onLogin={onLogin} />\n          <br />\n          <p className=\"login\">\n            Don't have an account? &nbsp;\n            <button onClick={() => setShowLogin(false)}>\n              Sign Up\n            </button>\n          </p>\n        </div>\n      ) : (\n        <div>\n          <SignUpForm onLogin={onLogin} />\n          <br />\n          <p className=\"login\">\n            Already have an account? &nbsp;\n            <button onClick={() => setShowLogin(true)}>\n              Log In\n            </button>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react'\n\nfunction Home() {\n    const dinoBackground = \"https://wallpaperaccess.com/full/1234923.jpg\"\n  return (\n    <div className='home-page'>\n        <main>\n            <h1>WELCOME TO THE DINOSAUR PROJECT</h1>\n            <h2>There are plenty of dinosaurs that need you to update their profiles</h2>\n        </main>\n        <img src={dinoBackground} alt='dino background' />\n    </div>\n  )\n}\n\nexport default Home","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavBar(){\n    return (\n        <div className=\"navigation\">\n          <NavLink\n            to=\"/\"\n            style={({isActive}) => ({background: isActive ? 'red' : ''})}\n            className=\"navbar\"\n          >\n            Home Page\n          </NavLink>\n          <NavLink\n            to=\"/dinosaurs_\"\n            style={({isActive}) => ({background: isActive ? 'red' : ''})}\n            className=\"navbar\"\n          >\n            Dinosaurs\n          </NavLink>\n          <NavLink\n            to=\"/information\"\n            style={({isActive}) => ({background: isActive ? 'red' : ''})}\n            className=\"navbar\"\n          >\n            Information\n          </NavLink>\n          <NavLink\n            to=\"/logout\"\n            style={({isActive}) => ({background: isActive ? 'red' : ''})}\n            className=\"navbar\"\n          >\n            Log out\n          </NavLink>\n        </div>\n      );\n}\n\nexport default NavBar;","import React, {useContext} from 'react'\nimport {UserContext} from './User'\n\nfunction Information() {\n    const {periods, regions, stats} = useContext(UserContext)\n\n    const {total_dinosaurs, by_region, by_period, by_diet} = stats\n\n    const regionsList = regions.map(region=><li key={region.id}>{region.name}</li>)\n    const periodsList = periods.map(period=><li key={period.id}>{period.name} period: {period.description}</li>)\n    const theWorld = \"https://upload.wikimedia.org/wikipedia/commons/7/7f/Rotating_earth_animated_transparent.gif\"\n\n    function listOf(list){\n        const statistics = list.map(el=><li key={el.id}>{el.name}: numbers: {el.numbers} // percentage: {el.percentage}%</li>)\n        return statistics\n    }\n\n  return (\n    <div className='information'>\n        <div className='info'>\n            <h3>Dinosaurs once inhabited these regions: </h3>\n            <ul>\n                {regionsList}\n            </ul>\n            <h3>Dinosaurs once lived during these 3 major time periods: </h3>\n            <ul>\n                {periodsList}\n            </ul>\n            <h3>Up to date status</h3>\n            <ul>\n                <li>Total number updated: {stats.needs_updating.updated} // Percentage updated: {stats.needs_updating.percentage_updated}%</li>\n                <li>Total number awaiting updates: {stats.needs_updating.number_to_update} // Percentage needing updating: {stats.needs_updating.percentage_to_update}%</li>\n            </ul>\n        </div>\n        <div className='info'>\n            <img src={theWorld} alt=\"the world\" />\n        </div>\n        <div className='info'>\n            <h2>Your statistics</h2>\n            <h3>Total number of dinosaurs: {total_dinosaurs}</h3>\n            <h4>Regions</h4>\n            <ul>{listOf(by_region)}</ul>\n            <h4>Periods</h4>\n            <ul>{listOf(by_period)}</ul>\n            <h4>Dietary Habits</h4>\n            <ul>{listOf(by_diet)}</ul>\n        </div>\n    </div>\n  )\n}\n\nexport default Information","import React, {useState, useContext} from 'react'\nimport { UserContext } from './User'\n\nfunction SignOut() {\n    const {user, setUser} = useContext(UserContext)\n    const [wantToLogOut, setWantToLogOut] = useState(false)\n    function LogOut() {\n        fetch('/logout', {\n            method: 'DELETE'\n        })\n        setUser(null)\n    }\n    console.log(user)\n\n    return (\n        <div className='list'>\n            <h1>{user.username} do you want to Log Out ?</h1> \n            <button onClick={()=>setWantToLogOut(!wantToLogOut)}>Click Here</button>\n            {wantToLogOut? \n             (<div>\n                <h1>Are you sure?</h1>\n                <button onClick={()=>LogOut()}>Yes</button>\n                <button onClick={()=>setWantToLogOut(!wantToLogOut)}>No</button>\n            </div>) \n            : null}\n        </div>\n    )\n}\n\nexport default SignOut","import React, {useContext} from 'react';\nimport { Routes, Route } from 'react-router';\nimport './index.css'\nimport DinosaurList from './DinosaurList';\nimport { UserContext } from './User';\nimport Login from './Login';\nimport Home from './Home';\nimport NavBar from './NavBar';\nimport Information from './Information';\nimport SignOut from './SignOut';\n\nfunction DinosaurProject() {\n  const {user, setUser, dinosaurs} = useContext(UserContext)\n\n  if (!user) return <Login onLogin={setUser}/>\n  return (\n    <div className=\"App\">\n        <NavBar />\n        <Routes>\n            <Route path='/' element={<Home/>} />\n            <Route path='/dinosaurs_' element={<DinosaurList dinosaurs={dinosaurs} />} />\n            <Route path='/information' element={<Information />} />\n            <Route path='/logout' element={<SignOut />} />\n        </Routes>     \n    </div>\n  );\n}\n\nexport default DinosaurProject;","import React from 'react';\nimport { UserProvider } from './User';\nimport DinosaurProject from './DinosaurProject';\n\nfunction App() {\n\n  return (\n    <UserProvider>\n      <DinosaurProject />\n    </UserProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}